rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Stolen bikes - users can read all, write their own
    match /stolenBikes/{bikeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Found bikes - users can read all, write their own
    match /foundBikes/{bikeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Matches - users can read their own matches
    match /matches/{matchId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.stolenBikeUserId || 
         request.auth.uid == resource.data.foundBikeUserId);
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.stolenBikeUserId || 
         request.auth.uid == resource.data.foundBikeUserId);
    }
    
    // Reports - users can create, admins can read/update
    match /reports/{reportId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null &&
        (request.auth.uid == resource.data.reporterId ||
         isAdmin());
    }

    // Helper function to check if user is admin
    // Note: This requires fetching the user document, which may impact performance
    // In production, consider using Firebase custom claims instead
    function isAdmin() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'moderator'];
    }
  }
}
