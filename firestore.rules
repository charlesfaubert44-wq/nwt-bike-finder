rules_version='2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone can read user profiles (for chat/matching)
      allow read: if isAuthenticated();
      // Users can only write their own profile
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isOwner(userId);
    }
    
    // Stolen bikes collection
    match /stolenBikes/{bikeId} {
      // Anyone authenticated can read (for matching)
      allow read: if isAuthenticated();
      // Only authenticated users can create
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid &&
                       request.resource.data.status == 'active';
      // Only owner can update/delete
      allow update: if isOwner(resource.data.userId);
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Found bikes collection
    match /foundBikes/{bikeId} {
      // Anyone authenticated can read (for matching)
      allow read: if isAuthenticated();
      // Only authenticated users can create
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid &&
                       request.resource.data.status == 'active';
      // Only owner can update/delete
      allow update: if isOwner(resource.data.userId);
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Matches collection
    match /matches/{matchId} {
      // Only authenticated users involved in the match can read
      allow read: if isAuthenticated() && (
        request.auth.uid in resource.data.involvedUsers ||
        isAdmin()
      );
      // System creates matches (via Cloud Functions)
      allow create: if false; // Only server-side
      // Users involved can update status
      allow update: if isAuthenticated() && 
                       request.auth.uid in resource.data.involvedUsers;
      // Only admins can delete
      allow delete: if isAdmin();
    }
    
    // Chat rooms collection
    match /chatRooms/{roomId} {
      // Only participants can read
      allow read: if isAuthenticated() && 
                     request.auth.uid in resource.data.participants;
      // System creates chat rooms (via Cloud Functions)
      allow create: if false; // Only server-side
      // Participants can update (e.g., last message)
      allow update: if isAuthenticated() && 
                       request.auth.uid in resource.data.participants;
      allow delete: if isAdmin();
      
      // Chat messages subcollection
      match /messages/{messageId} {
        // Participants can read messages
        allow read: if isAuthenticated() && 
                       request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(roomId)).data.participants;
        // Participants can create messages
        allow create: if isAuthenticated() && 
                         request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(roomId)).data.participants &&
                         request.resource.data.senderId == request.auth.uid;
        // Cannot update or delete messages
        allow update, delete: if false;
      }
    }
    
    // Reports collection (for flagging inappropriate content)
    match /reports/{reportId} {
      // Only admins can read
      allow read: if isAdmin();
      // Authenticated users can create reports
      allow create: if isAuthenticated() && 
                       request.resource.data.reporterId == request.auth.uid;
      // Only admins can update/delete
      allow update, delete: if isAdmin();
    }
    
    // Admins collection
    match /admins/{userId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only via Firebase Console
    }
    
    // Safety alerts collection
    match /safetyAlerts/{alertId} {
      // Anyone authenticated can read
      allow read: if isAuthenticated();
      // Only admins can create/update/delete
      allow create, update, delete: if isAdmin();
    }
    
    // Theft analytics collection
    match /theftAnalytics/{docId} {
      // Anyone can read analytics
      allow read: if true;
      // Only system can write
      allow write: if false; // Only server-side
    }
  }
}

